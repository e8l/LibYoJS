{
    "project": {},
    "files": {
        "src\\libyo.js": {
            "name": "src\\libyo.js",
            "modules": {
                "LibYo": 1
            },
            "classes": {
                "LibYo": 1,
                "Yo": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "LibYo": {
            "name": "LibYo",
            "submodules": {},
            "classes": {
                "LibYo": 1,
                "Yo": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\libyo.js",
            "line": 29
        }
    },
    "classes": {
        "LibYo": {
            "name": "LibYo",
            "shortname": "LibYo",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "LibYo",
            "namespace": "",
            "file": "src\\libyo.js",
            "line": 2
        },
        "Yo": {
            "name": "Yo",
            "shortname": "Yo",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "LibYo",
            "namespace": "",
            "file": "src\\libyo.js",
            "line": 29,
            "description": "Yo API Wrapper.\nplease get instance by calling LibYo.getInstance.",
            "access": "protected",
            "tagname": "",
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "src\\libyo.js",
            "line": 11,
            "description": "return instance of Yo API Wrapper Class\nThis is only way to get Yo class's instance.\n\n    var yo = LibYo.getInstance(\"<api token>\");",
            "static": 1,
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "api_token",
                    "description": "your Yo App's API Token.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "an instance of class Yo",
                "type": "Yo"
            },
            "class": "LibYo",
            "module": "LibYo"
        },
        {
            "file": "src\\libyo.js",
            "line": 37,
            "description": "event listener when send method has finished.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_listener",
            "params": [
                {
                    "name": "The",
                    "description": "value is true when send method has succeeded.",
                    "type": "Boolean"
                },
                {
                    "name": "status",
                    "description": "code.",
                    "type": "Number"
                },
                {
                    "name": "response",
                    "description": "text.",
                    "type": "String"
                }
            ],
            "class": "Yo",
            "module": "LibYo"
        },
        {
            "file": "src\\libyo.js",
            "line": 66,
            "description": "send yo to 'username'.\nthis method **does not** check if recipient exists really.\n\n    var yo = LibYo.getInstance(...);\n    \n    yo.yo(\"HOGE\"); // only say yo\n    yo.yo(\"HOGE\", \"http://example.com/sample.jpg\"); // yo with link",
            "async": 1,
            "itemtype": "method",
            "name": "yo",
            "params": [
                {
                    "name": "username",
                    "description": "Yo recipient user name",
                    "type": "String"
                },
                {
                    "name": "link",
                    "description": "(optional) link URL",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"\""
                }
            ],
            "return": {
                "description": "it returns false if username is not valid as a string.",
                "type": "Boolean"
            },
            "class": "Yo",
            "module": "LibYo"
        },
        {
            "file": "src\\libyo.js",
            "line": 102,
            "description": "send yo with text\n\n    var yo = LibYo.getInstance(...);\n    \n    yo.yoText(\"Lorem Ipsum\");",
            "async": 1,
            "itemtype": "method",
            "name": "yoText",
            "params": [
                {
                    "name": "username",
                    "description": "Yo recipient user name",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "text which you want to send. if empty, then it sends normal yo.",
                    "type": "String"
                }
            ],
            "class": "Yo",
            "module": "LibYo"
        },
        {
            "file": "src\\libyo.js",
            "line": 123,
            "description": "send yo to all subscribers\n\n    var yo = LibYo.getInstance(...);\n    \n    yo.yoAll(); // send yo to all\n    yo.yoAll(\"http://example.com/sample.jpg\"); // yoall with link",
            "async": 1,
            "itemtype": "method",
            "name": "yoall",
            "params": [
                {
                    "name": "link",
                    "description": "(optional) link url",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"\""
                }
            ],
            "class": "Yo",
            "module": "LibYo"
        },
        {
            "file": "src\\libyo.js",
            "line": 149,
            "description": "send yo with text to all subscribers\n\n    var yo = LibYo.getInstance(...);\n    \n    yo.yoallText(\"Lorem Ipsum\");",
            "async": 1,
            "itemtype": "method",
            "name": "yoallText",
            "params": [
                {
                    "name": "text",
                    "description": "text which you want to send. if empty, then it sends normal yo.",
                    "type": "String"
                }
            ],
            "class": "Yo",
            "module": "LibYo"
        },
        {
            "file": "src\\libyo.js",
            "line": 169,
            "description": "Check whether 'username' user exists really.\n\n    var yo = LibYo.getInstance(...);\n\n    yo.checkUserName(\"FOO\");",
            "async": 1,
            "itemtype": "method",
            "name": "checkUserName",
            "params": [
                {
                    "name": "username",
                    "description": "target username.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "it returns false if username is not valid as a string.",
                "type": "Boolean"
            },
            "class": "Yo",
            "module": "LibYo"
        },
        {
            "file": "src\\libyo.js",
            "line": 196,
            "description": "Set event listener which will call when send method has finished.\n\n    var yo = LibYo.getInstance(...);\n    \n    yo.setListener(function(isSucc, retCode, response) {\n      if( isSucc ) { //when last yo api has succeeded\n        ...\n      }\n      else {\n        ...\n      }\n    });\nListener will get 3 arguments.\nFisrt argument is whether last API call has succeeded.\nSecond argument is return code such as 200, 400, and so on.\nThird argument is response text (maybe JSON).",
            "itemtype": "method",
            "name": "setListener",
            "params": [
                {
                    "name": "func",
                    "description": "listener which receive 3 arguments.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "return true when the method has succeeded.",
                "type": "Boolean"
            },
            "class": "Yo",
            "module": "LibYo"
        }
    ],
    "warnings": []
}